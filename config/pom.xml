<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>cn.ylapl.cloud</groupId>
        <artifactId>all</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>config</artifactId>
    <version>${vs.version}</version>
    <packaging>jar</packaging>

    <properties>
        <finalName>config</finalName>
    </properties>

    <dependencies>

        <!-- ========= === == === = == = = == = =SpringCloud依赖 = = = = == = = = = = = = ======= = = = == = = = = -->

        <!-- SpringBoot config server -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-config-server</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- SpringBoot config monitor,热更新-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-config-monitor</artifactId>
        </dependency>

        <!-- ========= === == === = == = = == = =SpringCloud依赖 end = = = = == = = = = = = = ======= = = = == = = = = -->

    </dependencies>

    <!-- Package as an executable jar -->
    <build>
        <finalName>${finalName}</finalName>

        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <!-- 指定该Main Class为全局的唯一入口 -->
                    <mainClass>cn.ylapl.SpringBootConfig</mainClass>
                    <layout>ZIP</layout>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal><!--可以把依赖的包都打包到生成的Jar包中-->
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- docker打包工具 -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${docker.maven.plug.version}</version>
                <configuration>
                    <imageName>${docker.image.prefix}/${finalName}</imageName>
                    <imageTags>${vs.version}</imageTags>
                    <dockerDirectory>src/main/docker</dockerDirectory>
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${finalName}.jar</include>
                        </resource>
                    </resources>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>